name: Build gallery slideshow
on:
  push:
    paths:
      - 'assets/gallery/**'
      - '.github/workflows/slideshow.yml'
  workflow_dispatch:
  schedule:
  - cron: "0 * * * *"   # every hour

permissions:
  contents: write

concurrency:
  group: output-branch
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # build slideshow into dist/gallery/slideshow.gif
      - name: Build slideshow with Pillow
        run: |
          python -m pip install --upgrade pip pillow
          python - <<'PY'
          import re, glob, pathlib
          from PIL import Image, ImageOps
          def key(s): return [int(t) if t.isdigit() else t.lower() for t in re.split(r'(\d+)', s)]
          files = sorted(
              glob.glob('assets/gallery/*.[Jj][Pp][Gg]') +
              glob.glob('assets/gallery/*.[Jj][Pp][Ee][Gg]') +
              glob.glob('assets/gallery/*.[Pp][Nn][Gg]'),
              key=key
          )
          assert files, "No images in assets/gallery"
          frames=[]
          for f in files:
            im = Image.open(f).convert("RGBA")
            im = ImageOps.exif_transpose(im)
            im.thumbnail((900,900), Image.LANCZOS)
            frames.append(im.convert("RGB").quantize(colors=256))
          out = pathlib.Path("dist/gallery"); out.mkdir(parents=True, exist_ok=True)
          frames[0].save(out/"slideshow.gif", save_all=True,
                         append_images=frames[1:], loop=0, duration=1200,
                         optimize=True, disposal=2)
          PY

      # pull current output branch so we keep its files (e.g., pacman svg)
      - name: Pull existing output branch
        uses: actions/checkout@v4
        with:
          ref: output
          path: output_branch
        continue-on-error: true

      - name: Merge previous files into dist
        run: |
          mkdir -p dist
          [ -d output_branch ] && cp -R output_branch/. dist/ || true

      # publish merged dist (contains old files + new slideshow)
      - uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
